<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.chentian610</groupId>
	<artifactId>chentian610-tcc-capital-service</artifactId>
	<packaging>war</packaging>

	<name>${project.artifactId}</name>
	<parent>
		<groupId>com.chentian610</groupId>
		<artifactId>chentian610-tcc-capital</artifactId>
		<version>3.0.0</version>
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<start-class>boot.dubbo.simple.ApplicationBootstrap</start-class>
		<zookeeper.version>3.4.6</zookeeper.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dubbo</artifactId>
			<version>2.8.4a</version>
			<exclusions>
				<exclusion>
					<artifactId>guava</artifactId>
					<groupId>com.google.guava</groupId>
				</exclusion>
				<exclusion>
					<artifactId>curator-framework</artifactId>
					<groupId>org.apache.curator</groupId>
				</exclusion>
				<exclusion>
					<artifactId>curator-client</artifactId>
					<groupId>org.apache.curator</groupId>
				</exclusion>
				<exclusion>
					<artifactId>javax.servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
				<exclusion>
					<artifactId>httpclient</artifactId>
					<groupId>org.apache.httpcomponents</groupId>
				</exclusion>
				<exclusion>
					<artifactId>commons-pool</artifactId>
					<groupId>commons-pool</groupId>
				</exclusion>
				<exclusion>
					<artifactId>commons-codec</artifactId>
					<groupId>commons-codec</groupId>
				</exclusion>
				<exclusion>
					<artifactId>httpcore</artifactId>
					<groupId>org.apache.httpcomponents</groupId>
				</exclusion>
				<exclusion>
					<artifactId>slf4j-log4j12</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>log4j</artifactId>
					<groupId>log4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.spec.javax.el</groupId>
			<artifactId>jboss-el-api_3.0_spec</artifactId>
			<version>1.0.0.Final</version>
		</dependency>
		<!-- zookeeper start -->
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-log4j12</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>log4j</artifactId>
					<groupId>log4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<!--<groupId>com.github.sgroschupf</groupId>-->
			<!--<artifactId>zkclient</artifactId>-->
			<groupId>com.101tec</groupId>
			<artifactId>zkclient</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-log4j12</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>log4j</artifactId>
					<groupId>log4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- zookeeper end -->
		<!-- Spring boot start-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<!-- spring boot  默认的日志框架是Logback,所以在引用log4j2之前，需要先排除该包的依赖，再引入log4j2的依赖-->
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency> <!-- 引入log4j2依赖 -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<!--<dependency>  &lt;!&ndash; 加上这个才能辨认到log4j2.yml文件 &ndash;&gt;-->
			<!--<groupId>com.fasterxml.jackson.dataformat</groupId>-->
			<!--<artifactId>jackson-dataformat-yaml</artifactId>-->
		<!--</dependency>-->
		<!-- Spring boot end -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
		</dependency>
		<!-- capital start -->
		<dependency>
			<groupId>com.getui</groupId>
			<artifactId>gt-gexin-rp-sdk-base</artifactId>
			<version>${getui-version}</version>
		</dependency>
		<dependency>
			<groupId>com.getui</groupId>
			<artifactId>gt-gexin-rp-sdk-http</artifactId>
			<version>${getui-version}</version>
		</dependency>
		<dependency>
			<groupId>com.getui</groupId>
			<artifactId>gt-gexin-rp-sdk-template</artifactId>
			<version>${getui-version}</version>
		</dependency>
		<dependency>
			<groupId>com.getui</groupId>
			<artifactId>gt-protobuf-java</artifactId>
			<version>2.5.0</version>
		</dependency>
		<!-- capital end -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
		</dependency>
		<dependency>
			<groupId>com.esotericsoftware.kryo</groupId>
			<artifactId>kryo</artifactId>
		</dependency>
		<dependency>
			<groupId>de.javakaffee</groupId>
			<artifactId>kryo-serializers</artifactId>
		</dependency>
		<!--以下是课道自己模块-->
		<!--<dependency>-->
			<!--<groupId>com.chentian610</groupId>-->
			<!--<artifactId>chentian610-getui-api</artifactId>-->
			<!--<version>${project.parent.version}</version>-->
		<!--</dependency>-->
		<dependency>
			<groupId>com.chentian610</groupId>
			<artifactId>chentian610-common</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>com.chentian610</groupId>
			<artifactId>chentian610-framework</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>com.chentian610</groupId>
			<artifactId>chentian610-tcc-capital-api</artifactId>
			<version>3.0.0</version>
		</dependency>
	</dependencies>
</project>
